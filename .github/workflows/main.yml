name: Build and Push Docker Image
on:
    push:
        branches:
            - dev

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            # 서브 모듈 체크아웃
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  token: ${{ secrets.TOKEN }}

            # 서브 모듈 업데이트
            - name: Update Submodules
              run: git submodule update --recursive

            # 노드 설치
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '21'

            # 의존성 패키지 설치
            - name: Install Dependencies
              run: yarn install

            # 빌드
            - name: Build
              run: yarn build

            # Docker에 연결하여 이미지를 빌드하고 hub에 푸시
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: qweiop3334/drrr-frontend:latest
    # build
    deploy:
        needs: build
        name: Deploy
        runs-on: [self-hosted, drrr-label]
        steps:
            # Spring 어플리케이션 Docker Image 빌드
            # - name: Build Docker Image For Spring
            #   run: |
            #       docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            #       docker build -t ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름 .
            #       docker push ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름

            # # 서버에서 Docker 이미지 실행
            # - name: EC2 Docker Run
            #   uses: appleboy/ssh-action@master
            #   with:
            #       host: ${{ secrets.EC2_HOST }}
            #       username: ubuntu
            #       key: ${{ secrets.EC2_KEY }}
            #       script: |
            #           docker stop
            #           docker rm -f $(docker ps -qa)
            #           docker rmi ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
            #           docker pull ${{ secrets.DOCKER_USERNAME }}/도커 레파지토리 이름
            #           docker-compose up -d
            - name: Login to ghcr
              uses: actions/checkout@v3

            - name: login to ghcr
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}

            - name: Docker run
              run: |
                  docker stop ${{ secrets.CONTAINER_NAME }} && docker rm ${{ secrets.CONTAINER_NAME }} && docker rmi ${{ secrets.DOCKER_IMAGE_NAME }}:latest
                  docker run -d -p 5173:80 --name superman --restart always ${{ secrets.DOCKER_IMAGE_NAME }}:latest
