name: Build and Push Docker Image
on:
    push:
        branches:
            - dev

    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # 서브 모듈 체크아웃
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  token: ${{ secrets.TOKEN }}

            # 서브 모듈 업데이트
            - name: Update Submodules
              run: git submodule update --recursive

            # 노드 설치
            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'

            # 의존성 패키지 설치
            - name: Cache node modules
              uses: actions/cache@v3
              id: yarn-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install Dependencies
              if: steps.yarn-cache.outputs.cache-hit != 'true'
              run: yarn install

            # 빌드
            - name: Build
              run: yarn build

            # cypress test 실행
            - name: Run Cypress tests
              uses: cypress-io/github-action@v4
              with:
                  start: yarn start
                  command: yarn cypress run

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2

            # Docker에 연결하여 이미지를 빌드하고 hub에 푸시
            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v4
              with:
                  context: .
                  push: true
                  tags: qweiop3334/drrr-frontend:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    # build
    deploy:
        needs: build
        name: Deploy
        runs-on: [self-hosted, drrr-label]
        steps:
            - name: Login to ghcr
              uses: actions/checkout@v3

            - name: login to ghcr
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_TOKEN }}

            - name: Docker run
              run: |
                  docker stop ${{ secrets.CONTAINER_NAME }} && docker rm ${{ secrets.CONTAINER_NAME }} && docker rmi -f ${{ secrets.DOCKER_IMAGE_NAME }}:latest
                  docker run -d -p 5173:80 --name superman --restart always ${{ secrets.DOCKER_IMAGE_NAME }}:latest
